@use '../utils/' as *;

$closedSidebarWidth: rem(80);
$hiddenSidebarWidth: rem(300);
$openSidebarWidth: calc($hiddenSidebarWidth + $closedSidebarWidth);
$buttonWidth: rem(35);
$imgWidth: rem(60);
$movingX: rem(100);
$movingY: rem(100);

html,
body {
  font-family: 'Open Sans';
  font-weight: 300;
  height: 100%;
  margin: 0;
}

body {
  position: relative;
  padding-left: $closedSidebarWidth;
}

.container {
  /* 전체 감싸는 div */
  overflow-x: hidden; /* 가로 scroll bar 방지 */
  width: 100%;
}
.sidebar,
main {
  transition: transform 0.5s;
  width: 100vw;
  & * {
    transition: transform 0.5s;
  }
}

.sidebar {
  @include flexbox(column, flex-start, center);
  position: fixed;
  top: 0;
  bottom: 0;
  left: calc(-1 * $hiddenSidebarWidth);
  width: $openSidebarWidth;
  height: 100%;
  padding: rem(30);
  background-color: $primary01;
  &:hover,
  &:hover ~ main {
    transform: translate3d($hiddenSidebarWidth, 0, 0);
  }
  &__heading {
    position: absolute;
    right: calc($closedSidebarWidth / 2);
    transform: translateX(50%);
    width: $imgWidth;
    height: $imgWidth;
    border: 2px solid $primary;
    border-radius: 50%;
  }
  &:hover &__heading {
    transform: translateX(calc(-150px + $imgWidth/2));
  }
  &:hover &__button {
    &--statistics {
      transform: translate3d(-250px, calc(($buttonWidth * 2 + rem(15))), 0);
    }
    &--kanban {
      transform: translate3d(-175px, calc(($buttonWidth + rem(5))), 0);
    }
    &--logout {
      transform: translate3d(-100px, 0, 0);
    }
  }
  &:hover &__card-list {
    transform: translate3d(0, $movingY, 0);
  }
  &:hover &__form {
    transform: translate3d($movingX, $movingY, 0);
  }

  // 클래스 주는 식으로 갈 때
  &.active,
  &.active ~ main {
    transform: translate3d($hiddenSidebarWidth, 0, 0);
  }

  &.active &__heading {
    transform: translateX(calc(-150px + $imgWidth/2));
  }
  &.active &__button {
    &--statistics {
      transform: translate3d(-250px, calc(($buttonWidth * 2 + rem(15))), 0);
    }
    &--kanban {
      transform: translate3d(-175px, calc(($buttonWidth + rem(5))), 0);
    }
    &--logout {
      transform: translate3d(-100px, 0, 0);
    }
  }
  &.active &__card-list {
    transform: translate3d(0, $movingY, 0);
  }
  &.active &__form {
    transform: translate3d($movingX, $movingY, 0);
  }

  // closed Sidebar
  &__form {
    position: relative;
    left: calc($movingX * -1);
    top: calc($movingY * -1);
  }
  &__input {
    background-color: $white;
    border: 2px solid $primary04;
    margin: rem(90) 0 rem(10);
    width: calc($openSidebarWidth * 0.8);
    height: rem(50);
    text-align: center;
    border-radius: 5px;
    &:focus {
      outline: 2px solid $primary;
    }
    &--error {
      border: 4px solid red;
    }
  }

  &__error-msg {
    min-height: rem(15);
    color: $primary;
    font-size: rem(15);
    font-weight: 400;
    line-height: 1;
    text-align: center;
  }
  &__card-list {
    position: relative;
    top: calc($movingY * -1);
    margin: rem(10) 0;
    width: calc($openSidebarWidth * 0.8);
    padding: rem(5);
    background-color: $white;
    border: 2px solid $primary04;
    border-radius: 5px;
    max-height: 50vh;
    overflow-y: auto;
  }
  &__button {
    position: absolute;
    right: calc($closedSidebarWidth / 2);
    transform: translateX(50%);
    width: $buttonWidth;
    height: $buttonWidth;
    background-color: transparent;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    color: $primary;
    &--statistics {
      bottom: calc($buttonWidth * 3 + rem(15));
    }
    &--kanban {
      bottom: calc($buttonWidth * 2 + rem(5));
    }
    &--logout {
      bottom: calc($buttonWidth);
    }
  }
}

main {
  left: $closedSidebarWidth;
  // height: 100%;
  padding: 20px;
}
